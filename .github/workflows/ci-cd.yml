name: Build and Deploy Chatwoot

on:
  push:

env:
  ACR_RESOURCE_GROUP: CloudBornan
  AZURE_CONTAINER_REGISTRY: bornan
  CONTAINER_NAME: chatwoot-bornan
  CLUSTER_NAME: cluster-bornan
  CLUSTER_RESOURCE_GROUP: CloudBornan
  CLUSTER_RESOURCE_TYPE: Microsoft.ContainerService/managedClusters
  DOCKER_FILE: ./docker/Dockerfile
  BUILD_CONTEXT_PATH: ./
  NAMESPACE: client-saas
  ENABLENAMESPACECREATION: false
  AUTH_TYPE: SERVICE_PRINCIPAL

jobs:
  buildImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v3

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v2.2.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          auth-type: ${{ env.AUTH_TYPE }}

      # Logs into ACR
      - name: Log into ACR
        run: |
          az acr login -n ${{ env.AZURE_CONTAINER_REGISTRY }}

      # Builds and pushes an image up to your Azure Container Registry
      - name: Build and push image to ACR
        run: |
          GIT_SHA=$(git rev-parse HEAD)
          az acr build \
            --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:latest \
            --registry ${{ env.AZURE_CONTAINER_REGISTRY }} \
            -g ${{ env.ACR_RESOURCE_GROUP }} \
            --build-arg GIT_SHA=$GIT_SHA \
            -f ${{ env.DOCKER_FILE }} ${{ env.BUILD_CONTEXT_PATH }}

  deploy:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: buildImage
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Azure login
        uses: azure/login@v2.2.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          auth-type: ${{ env.AUTH_TYPE }}

      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group ${{ env.CLUSTER_RESOURCE_GROUP }} --name ${{ env.CLUSTER_NAME }} --overwrite-existing

      - name: Set image on deployment and rollout
        run: |
          kubectl set image deployment/${{ env.CONTAINER_NAME }} rails=${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:latest -n ${{ env.NAMESPACE }}
          kubectl rollout status deployment/${{ env.CONTAINER_NAME }} -n ${{ env.NAMESPACE }}
